<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20194.19.1211.1636                               -->
<workbook original-version='18.1' source-build='2019.4.1 (20194.19.1211.1636)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts ignorable='true' predowngraded='true' />
    <MapboxVectorStylesAndLayers />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='ListOfOrders+ (Section4 - AmazingMartEU2)' inline='true' name='federated.0bqoveh0t8dm6611ralbr147x7se' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Section4 - AmazingMartEU2' name='excel-direct.1p65tdc0vobo9v1c1aay81qy1xkm'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:/Arman/Learn/Udemy/Tableau 10 A-Z Hands-On Tableau Training For Data Science!/Section4 - AmazingMartEU2.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[ListOfOrders].[Order ID]' />
              <expression op='[OrderBreakdown].[Order ID]' />
            </expression>
          </clause>
          <relation connection='excel-direct.1p65tdc0vobo9v1c1aay81qy1xkm' name='ListOfOrders' table='[ListOfOrders$]' type='table'>
            <columns gridOrigin='A1:J4118:no:A1:J4118:0' header='yes' outcome='6'>
              <column datatype='string' name='Order ID' ordinal='0' />
              <column datatype='date' name='Order Date' ordinal='1' />
              <column datatype='string' name='Customer Name' ordinal='2' />
              <column datatype='string' name='City' ordinal='3' />
              <column datatype='string' name='Country' ordinal='4' />
              <column datatype='string' name='Region' ordinal='5' />
              <column datatype='string' name='Segment' ordinal='6' />
              <column datatype='date' name='Ship Date' ordinal='7' />
              <column datatype='string' name='Ship Mode' ordinal='8' />
              <column datatype='string' name='State' ordinal='9' />
            </columns>
          </relation>
          <relation connection='excel-direct.1p65tdc0vobo9v1c1aay81qy1xkm' name='OrderBreakdown' table='[OrderBreakdown$]' type='table'>
            <columns gridOrigin='A1:H8048:no:A1:H8048:0' header='yes' outcome='6'>
              <column datatype='string' name='Order ID' ordinal='0' />
              <column datatype='string' name='Product Name' ordinal='1' />
              <column datatype='real' name='Discount' ordinal='2' />
              <column datatype='integer' name='Sales' ordinal='3' />
              <column datatype='integer' name='Profit' ordinal='4' />
              <column datatype='integer' name='Quantity' ordinal='5' />
              <column datatype='string' name='Category' ordinal='6' />
              <column datatype='string' name='Sub-Category' ordinal='7' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[Category]' value='[OrderBreakdown].[Category]' />
          <map key='[City]' value='[ListOfOrders].[City]' />
          <map key='[Country]' value='[ListOfOrders].[Country]' />
          <map key='[Customer Name]' value='[ListOfOrders].[Customer Name]' />
          <map key='[Discount]' value='[OrderBreakdown].[Discount]' />
          <map key='[Order Date]' value='[ListOfOrders].[Order Date]' />
          <map key='[Order ID (OrderBreakdown)]' value='[OrderBreakdown].[Order ID]' />
          <map key='[Order ID]' value='[ListOfOrders].[Order ID]' />
          <map key='[Product Name]' value='[OrderBreakdown].[Product Name]' />
          <map key='[Profit]' value='[OrderBreakdown].[Profit]' />
          <map key='[Quantity]' value='[OrderBreakdown].[Quantity]' />
          <map key='[Region]' value='[ListOfOrders].[Region]' />
          <map key='[Sales]' value='[OrderBreakdown].[Sales]' />
          <map key='[Segment]' value='[ListOfOrders].[Segment]' />
          <map key='[Ship Date]' value='[ListOfOrders].[Ship Date]' />
          <map key='[Ship Mode]' value='[ListOfOrders].[Ship Mode]' />
          <map key='[State]' value='[ListOfOrders].[State]' />
          <map key='[Sub-Category]' value='[OrderBreakdown].[Sub-Category]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[ListOfOrders]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[ListOfOrders]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[ListOfOrders]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[ListOfOrders]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[ListOfOrders]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[ListOfOrders]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[ListOfOrders]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[ListOfOrders]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>7</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[ListOfOrders]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[ListOfOrders]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[ListOfOrders]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:J4118:no:A1:J4118:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID (OrderBreakdown)]</local-name>
            <parent-name>[OrderBreakdown]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[OrderBreakdown]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[OrderBreakdown]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[OrderBreakdown]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[OrderBreakdown]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[OrderBreakdown]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[OrderBreakdown]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[OrderBreakdown]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[OrderBreakdown]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:H8048:no:A1:H8048:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Profit margin' datatype='real' name='[Calculation_324822130813546496]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Profit])/SUM([Sales])' />
      </column>
      <column aggregation='None' datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column aggregation='None' datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='None' datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
      <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
      <group caption='Action (Country,State)' hidden='true' name='[Action (Country,State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country]' />
          <groupfilter function='level-members' level='[State]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (Country,State)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Country:nk]' />
          <groupfilter function='level-members' level='[none:State:nk]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Country, City'>
          <field>[Country]</field>
          <field>[State]</field>
          <field>[City]</field>
        </drill-path>
      </drill-paths>
      <layout dim-ordering='alphabetic' dim-percentage='0.517598' measure-ordering='alphabetic' measure-percentage='0.482402' show-structure='true' user-set-layout='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Iran&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='federated.0bqoveh0t8dm6611ralbr147x7se'>
      <datasources>
        <datasource caption='ListOfOrders+ (Section4 - AmazingMartEU2)' name='federated.0bqoveh0t8dm6611ralbr147x7se' />
      </datasources>
      <datasource-dependencies datasource='federated.0bqoveh0t8dm6611ralbr147x7se'>
        <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
        <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.0bqoveh0t8dm6611ralbr147x7se].[yr:Order Date:ok]'>
        <groupfilter function='member' level='[yr:Order Date:ok]' member='2013' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
        <target field='[federated.0bqoveh0t8dm6611ralbr147x7se].[yr:Order Date:ok]' />
      </filter>
    </shared-view>
  </shared-views>
  <actions>
    <action caption='Highlight1' name='[Action1]'>
      <activation auto-clear='true' type='on-hover' />
      <source dashboard='Dashboard 1' type='sheet' />
      <command command='tsc:brush'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter1' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Cistomer scatter plot'>
      <table>
        <view>
          <datasources>
            <datasource caption='ListOfOrders+ (Section4 - AmazingMartEU2)' name='federated.0bqoveh0t8dm6611ralbr147x7se' />
          </datasources>
          <datasource-dependencies datasource='federated.0bqoveh0t8dm6611ralbr147x7se'>
            <column caption='Profit margin' datatype='real' name='[Calculation_324822130813546496]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Profit])/SUM([Sales])' />
            </column>
            <column aggregation='None' datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Sales]' role='measure' type='quantitative' />
            <column aggregation='None' datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Customer Name]' derivation='None' name='[none:Customer Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_324822130813546496]' derivation='User' name='[usr:Calculation_324822130813546496:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0bqoveh0t8dm6611ralbr147x7se].[Action (Country,State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country]' />
              <groupfilter function='level-members' level='[State]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0bqoveh0t8dm6611ralbr147x7se].[yr:Order Date:ok]</column>
            <column>[federated.0bqoveh0t8dm6611ralbr147x7se].[Action (Country,State)]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.0bqoveh0t8dm6611ralbr147x7se].[sum:Sales:qk]' value='74' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0bqoveh0t8dm6611ralbr147x7se].[usr:Calculation_324822130813546496:qk]' />
              <lod column='[federated.0bqoveh0t8dm6611ralbr147x7se].[none:Customer Name:nk]' />
              <lod column='[federated.0bqoveh0t8dm6611ralbr147x7se].[none:Country:nk]' />
              <lod column='[federated.0bqoveh0t8dm6611ralbr147x7se].[none:State:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='312' />
                <format attr='maxheight' value='312' />
                <format attr='minwidth' value='520' />
                <format attr='maxwidth' value='520' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0bqoveh0t8dm6611ralbr147x7se].[sum:Profit:qk]</rows>
        <cols>[federated.0bqoveh0t8dm6611ralbr147x7se].[sum:Sales:qk]</cols>
      </table>
      <simple-id uuid='{045263C0-4A12-43DB-99EF-0E903A3A8E2B}' />
    </worksheet>
    <worksheet name='Map of Europe'>
      <table>
        <view>
          <datasources>
            <datasource caption='ListOfOrders+ (Section4 - AmazingMartEU2)' name='federated.0bqoveh0t8dm6611ralbr147x7se' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0bqoveh0t8dm6611ralbr147x7se'>
            <column caption='SUM([Profit])/SUM([Sales])' datatype='real' name='[Calculation_324822130814492673]' role='measure' type='quantitative' user:unnamed='Sheet 1'>
              <calculation class='tableau' formula='SUM([Profit])/SUM([Sales])' />
            </column>
            <column aggregation='None' datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Sales]' role='measure' type='quantitative' />
            <column aggregation='None' datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_324822130814492673]' derivation='User' name='[usr:Calculation_324822130814492673:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0bqoveh0t8dm6611ralbr147x7se].[Exclusions (Country,State)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:Country:nk]' />
                <groupfilter function='level-members' level='[none:State:nk]' />
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Austria&quot;' />
                <groupfilter function='member' level='[none:State:nk]' member='&quot;Vienna&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0bqoveh0t8dm6611ralbr147x7se].[yr:Order Date:ok]</column>
            <column>[federated.0bqoveh0t8dm6611ralbr147x7se].[Exclusions (Country,State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0bqoveh0t8dm6611ralbr147x7se].[Longitude (generated)]' field-type='quantitative' max='6960416.7329644933' min='-3415995.0298264464' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0bqoveh0t8dm6611ralbr147x7se].[Latitude (generated)]' field-type='quantitative' max='8032215.9406690989' min='3235723.6828284832' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0bqoveh0t8dm6611ralbr147x7se].[sum:Sales:qk]' palette='orange_blue_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0bqoveh0t8dm6611ralbr147x7se].[usr:Calculation_324822130814492673:qk]' />
              <size column='[federated.0bqoveh0t8dm6611ralbr147x7se].[sum:Sales:qk]' />
              <lod column='[federated.0bqoveh0t8dm6611ralbr147x7se].[none:Country:nk]' />
              <lod column='[federated.0bqoveh0t8dm6611ralbr147x7se].[none:State:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='753' />
                <format attr='maxwidth' value='753' />
                <format attr='minheight' value='300' />
                <format attr='maxheight' value='300' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0bqoveh0t8dm6611ralbr147x7se].[Latitude (generated)]</rows>
        <cols>[federated.0bqoveh0t8dm6611ralbr147x7se].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{735EB42F-4E2F-4AAA-A2A6-39130F5FC930}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='ListOfOrders+ (Section4 - AmazingMartEU2)' name='federated.0bqoveh0t8dm6611ralbr147x7se' />
      </datasources>
      <datasource-dependencies datasource='federated.0bqoveh0t8dm6611ralbr147x7se'>
        <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
        <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='7' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='5' type='layout-basic' w='76300' x='800' y='1000'>
              <zone h='44000' id='3' name='Map of Europe' w='76300' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='54000' id='11' name='Cistomer scatter plot' w='76300' x='800' y='45000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='221' h='98000' id='6' is-fixed='true' param='vert' type='layout-flow' w='22100' x='77100' y='1000'>
              <zone h='9375' id='8' mode='slider' name='Map of Europe' param='[federated.0bqoveh0t8dm6611ralbr147x7se].[yr:Order Date:ok]' type='filter' w='22100' x='77100' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='15750' id='9' name='Map of Europe' pane-specification-id='0' param='[federated.0bqoveh0t8dm6611ralbr147x7se].[sum:Sales:qk]' type='size' w='22100' x='77100' y='10375'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='750' minheight='750' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='13' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='12' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
                <zone h='9375' id='8' mode='slider' name='Map of Europe' param='[federated.0bqoveh0t8dm6611ralbr147x7se].[yr:Order Date:ok]' type='filter' w='22100' x='77100' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='44000' id='3' is-fixed='true' name='Map of Europe' w='76300' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='15750' id='9' name='Map of Europe' pane-specification-id='0' param='[federated.0bqoveh0t8dm6611ralbr147x7se].[sum:Sales:qk]' type='size' w='22100' x='77100' y='10375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='54000' id='11' is-fixed='true' name='Cistomer scatter plot' w='76300' x='800' y='45000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{12B55565-4326-4EF4-B639-0BC8A1E65338}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Map of Europe'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[federated.0bqoveh0t8dm6611ralbr147x7se].[sum:Sales:qk]' type='size' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='197'>
            <card mode='slider' param='[federated.0bqoveh0t8dm6611ralbr147x7se].[yr:Order Date:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.0bqoveh0t8dm6611ralbr147x7se].[usr:Calculation_324822130814492673:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0bqoveh0t8dm6611ralbr147x7se].[usr:Calculation_324822130814492673:qk]</field>
            <field>[federated.0bqoveh0t8dm6611ralbr147x7se].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6E62AB00-E0D3-4B6D-89A5-8CB63DC1D64C}' />
    </window>
    <window class='worksheet' name='Cistomer scatter plot'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0bqoveh0t8dm6611ralbr147x7se].[yr:Order Date:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.0bqoveh0t8dm6611ralbr147x7se].[usr:Calculation_324822130813546496:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0bqoveh0t8dm6611ralbr147x7se].[none:Customer Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{30C40707-93CF-4F50-9196-152D7AB6A35D}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Cistomer scatter plot'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Map of Europe'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
      </viewpoints>
      <active id='3' />
      <simple-id uuid='{9D26B9A7-C541-425A-9CDD-3EB67EE09D01}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Cistomer scatter plot' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      4/8HKJINuj1ZBXMAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Map of Europe' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
